version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER:-admin}
      - KEYCLOAK_ADMIN_PASSWORD_FILE=/run/secrets/keycloak_admin_password
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=${POSTGRES_USER:-keycloak}
      - KC_DB_PASSWORD_FILE=/run/secrets/postgres_password
      - KC_HOSTNAME=${KEYCLOAK_HOSTNAME:-localhost}
      - KC_HOSTNAME_PORT=${KEYCLOAK_PORT:-8080}
      - KC_HOSTNAME_STRICT=${KEYCLOAK_HOSTNAME_STRICT:-false}
      - KC_HTTP_ENABLED=${KEYCLOAK_HTTP_ENABLED:-true}
      - KC_PROXY=${KEYCLOAK_PROXY:-edge}
      - KC_LOG_LEVEL=${KEYCLOAK_LOG_LEVEL:-INFO}
    secrets:
      - keycloak_admin_password
      - postgres_password
    volumes:
      - ./config/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
      - ./themes:/opt/keycloak/themes:ro
      - keycloak_data:/opt/keycloak/data
    networks:
      - keycloak-network
    depends_on:
      - postgres
    command: ["start", "--import-realm"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  postgres:
    image: postgres:15-alpine
    container_name: keycloak-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-keycloak}
      - POSTGRES_USER=${POSTGRES_USER:-keycloak}
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Example application with Keycloak integration
  demo-app:
    image: nginx:alpine
    container_name: demo-app
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./demo-app:/usr/share/nginx/html:ro
    networks:
      - keycloak-network
    profiles:
      - demo

  # Mail server for testing (MailHog)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - keycloak-network
    profiles:
      - mail

secrets:
  keycloak_admin_password:
    file: ./secrets/keycloak_admin_password.txt
  postgres_password:
    file: ./secrets/postgres_password.txt

volumes:
  keycloak_data:
    driver: local
  postgres_data:
    driver: local

networks:
  keycloak-network:
    driver: bridge
