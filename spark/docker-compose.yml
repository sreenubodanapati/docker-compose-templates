version: '3.8'

services:
  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    restart: unless-stopped
    ports:
      - "8080:8080"   # Master Web UI
      - "7077:7077"   # Master port
      - "4040:4040"   # Spark UI
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT_NUMBER=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_RPC_AUTHENTICATION_ENABLED=${SPARK_RPC_AUTHENTICATION_ENABLED:-no}
      - SPARK_RPC_ENCRYPTION_ENABLED=${SPARK_RPC_ENCRYPTION_ENABLED:-no}
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=${SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED:-no}
      - SPARK_SSL_ENABLED=${SPARK_SSL_ENABLED:-no}
      - SPARK_USER=${SPARK_USER:-spark}
    volumes:
      - ./apps:/opt/bitnami/spark/apps
      - ./data:/opt/bitnami/spark/data
      - spark_master_data:/bitnami/spark
    networks:
      - spark-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  spark-worker-1:
    image: bitnami/spark:3.5.0
    container_name: spark-worker-1
    restart: unless-stopped
    ports:
      - "8081:8081"   # Worker Web UI
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_WEBUI_PORT=8081
      - SPARK_WORKER_MEMORY=${SPARK_WORKER_MEMORY:-2g}
      - SPARK_WORKER_CORES=${SPARK_WORKER_CORES:-2}
      - SPARK_RPC_AUTHENTICATION_ENABLED=${SPARK_RPC_AUTHENTICATION_ENABLED:-no}
      - SPARK_RPC_ENCRYPTION_ENABLED=${SPARK_RPC_ENCRYPTION_ENABLED:-no}
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=${SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED:-no}
      - SPARK_SSL_ENABLED=${SPARK_SSL_ENABLED:-no}
      - SPARK_USER=${SPARK_USER:-spark}
    volumes:
      - ./apps:/opt/bitnami/spark/apps
      - ./data:/opt/bitnami/spark/data
      - spark_worker_1_data:/bitnami/spark
    networks:
      - spark-network
    depends_on:
      - spark-master
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  spark-worker-2:
    image: bitnami/spark:3.5.0
    container_name: spark-worker-2
    restart: unless-stopped
    ports:
      - "8082:8081"   # Worker Web UI
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_WEBUI_PORT=8081
      - SPARK_WORKER_MEMORY=${SPARK_WORKER_MEMORY:-2g}
      - SPARK_WORKER_CORES=${SPARK_WORKER_CORES:-2}
      - SPARK_RPC_AUTHENTICATION_ENABLED=${SPARK_RPC_AUTHENTICATION_ENABLED:-no}
      - SPARK_RPC_ENCRYPTION_ENABLED=${SPARK_RPC_ENCRYPTION_ENABLED:-no}
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=${SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED:-no}
      - SPARK_SSL_ENABLED=${SPARK_SSL_ENABLED:-no}
      - SPARK_USER=${SPARK_USER:-spark}
    volumes:
      - ./apps:/opt/bitnami/spark/apps
      - ./data:/opt/bitnami/spark/data
      - spark_worker_2_data:/bitnami/spark
    networks:
      - spark-network
    depends_on:
      - spark-master
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - multi-worker

  # Jupyter Notebook for Spark development
  jupyter:
    image: jupyter/pyspark-notebook:spark-3.5.0
    container_name: spark-jupyter
    restart: unless-stopped
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-spark}
      - SPARK_MASTER=spark://spark-master:7077
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
    networks:
      - spark-network
    depends_on:
      - spark-master
    profiles:
      - jupyter

  # Spark History Server
  spark-history:
    image: bitnami/spark:3.5.0
    container_name: spark-history
    restart: unless-stopped
    ports:
      - "18080:18080"
    environment:
      - SPARK_MODE=history-server
      - SPARK_HISTORY_SERVER_LOG_DIR=/opt/bitnami/spark/logs
    volumes:
      - ./history:/opt/bitnami/spark/logs
      - spark_history_data:/bitnami/spark
    networks:
      - spark-network
    profiles:
      - history

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:RELEASE.2023-11-20T22-40-07Z
    container_name: spark-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    networks:
      - spark-network
    command: server /data --console-address ":9001"
    profiles:
      - storage

volumes:
  spark_master_data:
    driver: local
  spark_worker_1_data:
    driver: local
  spark_worker_2_data:
    driver: local
  spark_history_data:
    driver: local
  minio_data:
    driver: local

networks:
  spark-network:
    driver: bridge
