version: '3.8'

services:
  sonarqube:
    image: sonarqube:10.3-community
    container_name: sonarqube
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
      - SONAR_JDBC_USERNAME=${POSTGRES_USER:-sonar}
      - SONAR_JDBC_PASSWORD_FILE=/run/secrets/postgres_password
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    secrets:
      - postgres_password
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_conf:/opt/sonarqube/conf
    networks:
      - sonarqube-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9000/api/system/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  postgres:
    image: postgres:15-alpine
    container_name: sonarqube-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-sonar}
      - POSTGRES_DB=${POSTGRES_DB:-sonar}
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - sonarqube-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sonar}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # SonarQube Scanner CLI for CI/CD
  sonar-scanner:
    image: sonarsource/sonar-scanner-cli:5.0
    container_name: sonar-scanner
    volumes:
      - ./projects:/usr/src
      - ./scanner-config:/opt/sonar-scanner/conf:ro
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
      - SONAR_TOKEN_FILE=/run/secrets/sonar_token
    secrets:
      - sonar_token
    networks:
      - sonarqube-network
    depends_on:
      - sonarqube
    profiles:
      - scanner
    command: tail -f /dev/null  # Keep container running

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  sonar_token:
    file: ./secrets/sonar_token.txt

volumes:
  sonarqube_data:
    driver: local
  sonarqube_logs:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_conf:
    driver: local
  postgres_data:
    driver: local

networks:
  sonarqube-network:
    driver: bridge
