version: '3.8'

services:
  portainer:
    image: portainer/portainer-ce:2.19.4
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9443:9443"   # HTTPS
      - "8000:8000"   # Edge agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    environment:
      - PORTAINER_HTTP_ENABLED=${PORTAINER_HTTP_ENABLED:-true}
      - PORTAINER_HTTPS_ENABLED=${PORTAINER_HTTPS_ENABLED:-true}
    networks:
      - portainer-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9000/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Portainer Agent for remote Docker management
  portainer-agent:
    image: portainer/agent:2.19.4
    container_name: portainer-agent
    restart: unless-stopped
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes:ro
    environment:
      - AGENT_CLUSTER_ADDR=portainer-agent
      - LOG_LEVEL=${PORTAINER_LOG_LEVEL:-INFO}
    networks:
      - portainer-network
    profiles:
      - agent

  # Example monitored application
  nginx:
    image: nginx:alpine
    container_name: nginx-demo
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./html:/usr/share/nginx/html:ro
    networks:
      - portainer-network
    labels:
      - "io.portainer.accesscontrol.teams=developers"
    profiles:
      - demo

  # Example database for monitoring
  mysql:
    image: mysql:8.0
    container_name: mysql-demo
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
      - MYSQL_DATABASE=testdb
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
    secrets:
      - mysql_root_password
      - mysql_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - portainer-network
    profiles:
      - demo

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt

volumes:
  portainer_data:
    driver: local
  mysql_data:
    driver: local

networks:
  portainer-network:
    driver: bridge
